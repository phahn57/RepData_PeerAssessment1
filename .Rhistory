tails(plants,15)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
load(datasets)
library(datasets)
data(iris)
head(iris)
m<-mean(iris[,1],iris$Species=="setosa")
m<-mean(iris[,1])
set<-iris$Species=="virginica"
set
virg<-iris(set)
virg<-iris[set]
virg<-iris[[set]]
virg<-subset(iris,Species=="virginica")
virg
m<-mean(virg[,1])
m
test<-apply(iris[, 1:4], 2, mean)
test
set<-iris[iris$species=="virginica"]
set
set<-iris[,iris$species=="virginica"]
set
View(set)
set<-iris[,iris$species=="virginica", ]
set
set<-iris[iris$species=="virginica", ]
set
set<-iris[iris$species==virginica, ]
iris
set<-iris[iris$Species==virginica, ]
set<-iris[iris$Species=="virginica", ]
set<-iris[iris$Species=="virginica"]
set<-iris[iris$Species=="virginica", ]
set
m<-mean(set[ ,1])
m
dat(mtcars)
data(mtcars)
head(mtcars)
sapply(mtcars mean)
sapply(mtcars, mean)
sapply(mtcars[,1:2], mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
s<-split(mtcars$mpg, mtcars$cyl)
s
sapply(split(mtcars$hp, mtcars$cyl), mean)
s<-sapply(split(mtcars$hp, mtcars$cyl), mean)
s
str(s)
diff<-s[3]-s[1]
diff
debug(ls)
ls()
q
q
2
2
1
quit
klinik<-read.csv("fallexport.csv",header=T,sep=";")
klinik<-read.csv2("fallexport.csv",header=T)
klinik<-read.table("fallexport.csv",header=T)
klinik<-read.table(fallexport.csv,header=T)
klinik<-read.csv2("fallexport.csv",header=T)
dir()
klinik<-read.csv2("fallexport.csv")
klinik<-read.csv2("falexport.csv",unique=f)
klinik<-read.csv2("falexport.csv",unique=F)
klinik<-read.csv2("falfexport.csv",unique=F)
klinik<-read.csv2("falfexport.csv")
klinik<-read.csv2("fallexport.csv")
klinik<-read.csv2("fallexport.csv",fileEncoding="UTF-8")
klinik<-read.csv2("fallexport.csv",sep=";",fileEncoding="UTF-8")
klinik<-read.csv2("fallexport.csv",sep=";")
klinik<-read.csv2("fallexport.csv",encoding="ISO-8859-1",sep=";")
klinik<-read.csv2(file("fallexport.csv",encoding="ISO-8859-1"),sep=";")
dim klinik
dim (klinik)
hand<-klinik[klinik$Abt="H-CHI"]
hand<-klinik[klinik$Abt="H-CHI",1]
hand<-klinik[klinik$Abt=="H-CHI"]
hand<-klinik[klinik$Abt=="H-CHI",]
hand[27]
hand[30]
kat=hand[30]
kat
kats<-split(kat)
str(kat)
kats<-split(kat,kat)
kats
kats<-split(kat,mean)
kats<-split(kat,mean())
kat
str(kat)
sum(kat)
r
?str
summary(kat)
amb<-klinik[30]
summary(amb)
?summary
summary(amb,maxsum=10)
summary(amb,maxsum=15)
summary(amb,maxsum=20)
View(hand)
amb<-klinik[30]
str(klinik)
names(klinik)
k1<-klinik[,c(1:9,16,27,30,31,53:55,86,89,142,144,157)]
k1
names(k1)
hist(k1[,19])
k1[,19]
hist(k1[,19],breaks=c(10,20,30,40,50,60,70,80,90,100,110))
hist(k1[,19],breaks=c(10,20,30,40,50,60,70,80,90,100,110:400))
hist(k1[,19]
)
min(kl[,19])
min(k1[,19])
min(k1[,19],na.rm=F)
min(k1[,19],na.rm=T)
max(k1[,19],na.rm=T)
range(k1[,19],na.rm=T)
names(k1)
names(klinik)
k1<-klinik[,c(1:9,16,27,30,31,53:55,86,89,120,142,144,157)]
names(k1)
k1[,8]
names(k1)
k1[,19]
k_op<-k1[k1$OP=="J",]
k_op
names(k_op)
summary(k_op[,21])
klinik<-read.csv2(file("fallexport.csv",encoding="ISO-8859-1"),sep=";")
kl<-klinik[,c(1:9,16,27,30,31,53:55,86,89,120,142,144,157)]]
kl<-klinik[,c(1:9,16,27,30,31,53:55,86,89,120,142,144,157)]
summary(kl[,21])
hand_op<-klinik[with(klinik, Abt=="H-CHI" & OP == "J"), ])
hand_op<-klinik[with(klinik, Abt=="H-CHI" & OP == "J"), ]
hand_op
names(hand_op)
hand_op<-kl[with(kl, Abt=="H-CHI" & OP == "J"), ]
kl
names(kl)
plot(hand_op[20],hand_op[22])
plot(hand_op[20],hand_op[22],type="p")
point(hand_op[20],hand_op[22],type="p")
points(hand_op[20],hand_op[22],type="p")
zeit_ein<-hand_op[,c(20,22)]
ploz(zeit_ein)
plot(zeit_ein)
source('~/ProgrammingAssignment2/mean.R')
a<- makeVector(c(1,2,3,4))
a
a$get
a$get()
a$getmean()
cachemean(a)
a$getmean()
cachemean(a)
a<- makeVector(c(10,20,30,40))
a$getmean()
a<-matrix(1:4,2,2)
a
solve(a)
source('~/.active-rstudio-document')
a<-makeCacheMatrix(c(1:4,2,2))
a
a$get()
a<-makeCacheMatrix(1:4,2,2)
a<-makeCacheMatrix(matrix(1:4,2,2))
a$get()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
a<-makeCacheMatrix(matrix(1:4,2,2))
a$get()
a$getinv()
cacheSolve(x)
cacheSolve(a)
source('~/.active-rstudio-document')
a<-makeCacheMatrix(matrix(1:4,2,2))
a$getinv()
cacheSolve(a)
a$getinv()
a$set(matrix(1:9,3,3))
a$getinv()
cacheSolve(a)
a$get()
a$set(matrix(c(10,20,30,40),3,3))
a$set(matrix(c(10,20,30,40),2,2))
a$get()
cacheSolve(a)
inv
a$getinv()
cacheSolve(a)
library(XML)
install.packages(XML)
install.packages("XML")
library(XML)
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
doc<-xmlTreeParse(fileUrl,useInternal=TRUE)
library(RCulr)
library(RCurl)
file<-getUrl(fileUrl)
file<-getURL(fileUrl)
doc<-xmlParse(file)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
names(rootNode)
rootNode[[2]]
rootNode[[3]]
xmlName(rootNode)
rootNode[[1]][[3]]
rootNode[[1]][[4]]
xmlSApply(rootNode,xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
zip<-xpathSApply(rootNode,"//zipcode",xmlValue)
zip
zip("21231")
zip["21231"]
zip[21231]
subset(zip,zip=="21231")
library(swirl)
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
submit()
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
head(top_counts,20)
arrange(top_counts,desc(count))
View(pack_sum)
quantile(pack_sum$unique,probs =0.99)
top_unique<-filter(packsum,unique>465)
top_unique<-filter(pack_sum,unique>465)
top_unique
arrange(top_unique,desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(student,sex,count,-grade)
gather(students,sex,count,-grade)
students2
res<- gather(students2,sex_class,count,-grade)
res
?seperate
?separate
seperate(res,sex_class,into=c("sex","class""))
)
separate(res,sex_class,into=c("sex","class""))
separate(res,sex_class,into=c("sex","class"))
students2 %>%
gather(sex_class ,count ,-grade ) %>%
separate(sex_class ,into c("sex", "class")) %>%
print
(students2 %>%
gather(sex_class ,count ,-grade ) %>%
separate(sex_class ,into c("sex", "class")) %>%
print)
(students2 %>%
gather(sex_class ,count ,-grade ) %>%
separate(sex_class ,into c("sex", "class")) %>%
print())
students2 %>%
gather(sex_class ,count ,-grade ) %>%
separate(sex_class ,into c("sex", "class")) %>%
print
students2 %>%
gather(sex_class ,count ,-grade ) %>%
separate(sex_class ,into c("sex", "class")) %>%
print()
students2 %>%
gather(sex_class ,count ,-grade ) %>%
separate(sex_class ,into c("sex", "class")) %>%
print
students2 %>%
gather(sex_class,count,-grade ) %>%
separate(sex_class,into c("sex", "class")) %>%
print
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
students2 %>%
gather(sex_class,count,-grade ) %>%
separate(sex_class,into c("sex", "class")) %>%
print
students2 %>%
gather(sex_class,count,-grade ) %>%
separate(sex_class,into c("sex", "class")) %>%
print
swirl
swirl()
source('~/.active-rstudio-document')
reset()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
swirl()
library(tidyr)
students
?gather
gather(student,sex,count-grase)
gather(student,sex,count-grade)
gather(student,sex,count,-grade)
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count)
res<-gather(students2,sex_class,count,-grade)
res
View(students2)
?separate
separate(res,sex_class,into=c("sex","class"))
source('~/.active-rstudio-document')
submit()
submit()
students
students3
submit()
reset()
submit()
?spread
submit()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed,status="passed")
passed<-passed %>% mutate(status ="passed")
failed<-failed %>% mutate(status ="failed")
rbind_list(passed,failed)
sat
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(rmarkdown)
```{r}
unzip("activity.zip")
## read file into data.frame
act<-read.csv("activity.csv")
```
tt<-rep(0:287,length=17568)
act$tt<-test
## What is mean total number of steps taken per day?
### Total number of steps each day
```{r}
avg<-aggregate(steps~date,act,mean)
hist(avg$steps,main="Histogram of average steps each day",xlab="Steps",ylim=c(0,30))
```
###Mean of steps is:
```{r}
mean(avg$steps)
```
###Median of steps is:
```{r}
median(avg$steps)
```
## What is the average daily activity pattern?
```{r,fig.width=9}
pattern<-aggregate(steps~tt,act,mean)
plot(pattern$tt,pattern$steps,main="Average activity pattern",xlab="interval",ylab="average steps",type="l")
```
###Interval with maximum steps on average
```{r}
a <- subset(pattern,steps==max(pattern$steps,na.rm=TRUE))
max_int<-a[1,1]
max_int
```
## Imputing missing values
### 1.Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)
```{r}
empty<-is.na(act$steps)
sum(empty)
```
### Devise a strategy for filling in all of the missing values in the dataset
As strategy the mean of each 5- minutes interval is used to replace NA
The variable -pattern- calculated above contains the average of steps for each interval
Filling NA with the average of the respective time resulting in a new dataframe act_m1
```{r}
## merge act with pattern
act_m<-merge(act,pattern,"interval")
## Function for mapply
afn<-function(x,y){
if (is.na(x)){
y
} else
{x}
}
act_m$stepsn<-mapply(afn,act_m$steps.x,act_m$steps.y)
##remove columns necessary for merging
act_m1<-act_m[,c(1,3,5)]
avg1<-aggregate(stepsn~date,act_m1,mean)
hist(avg1$stepsn,main="Histogram of average steps each day",xlab="Steps",ylim=c(0,30))
```
Calculation of corrected median
```{r}
mean(avg1$stepsn)
median(avg1$stepsn)
```
Mean is equal but median is shifted. I am very astonished about the result.
## Are there differences in activity patterns between weekdays and weekends?
setwd("~/Documents/class/RepData_PeerAssessment1")
```{r}
unzip("activity.zip")
## read file into data.frame
act<-read.csv("activity.csv")
```
tt<-rep(0:287,length=17568)
act$tt<-test
## What is mean total number of steps taken per day?
### Total number of steps each day
```{r}
avg<-aggregate(steps~date,act,mean)
hist(avg$steps,main="Histogram of average steps each day",xlab="Steps",ylim=c(0,30))
```
###Mean of steps is:
```{r}
mean(avg$steps)
```
###Median of steps is:
```{r}
median(avg$steps)
```
## What is the average daily activity pattern?
```{r,fig.width=9}
pattern<-aggregate(steps~tt,act,mean)
plot(pattern$tt,pattern$steps,main="Average activity pattern",xlab="interval",ylab="average steps",type="l")
```
###Interval with maximum steps on average
```{r}
a <- subset(pattern,steps==max(pattern$steps,na.rm=TRUE))
max_int<-a[1,1]
max_int
```
## Imputing missing values
### 1.Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)
```{r}
empty<-is.na(act$steps)
sum(empty)
```
### Devise a strategy for filling in all of the missing values in the dataset
As strategy the mean of each 5- minutes interval is used to replace NA
The variable -pattern- calculated above contains the average of steps for each interval
Filling NA with the average of the respective time resulting in a new dataframe act_m1
```{r}
## merge act with pattern
act_m<-merge(act,pattern,"interval")
## Function for mapply
afn<-function(x,y){
if (is.na(x)){
y
} else
{x}
}
act_m$stepsn<-mapply(afn,act_m$steps.x,act_m$steps.y)
##remove columns necessary for merging
act_m1<-act_m[,c(1,3,5)]
avg1<-aggregate(stepsn~date,act_m1,mean)
hist(avg1$stepsn,main="Histogram of average steps each day",xlab="Steps",ylim=c(0,30))
```
Calculation of corrected median
```{r}
mean(avg1$stepsn)
median(avg1$stepsn)
```
Mean is equal but median is shifted. I am very astonished about the result.
## Are there differences in activity patterns between weekdays and weekends?
